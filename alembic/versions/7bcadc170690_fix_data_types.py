"""fix data types

Revision ID: 7bcadc170690
Revises: 6b3d6d4a1e98
Create Date: 2025-09-13 20:42:25.854583

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector


# revision identifiers, used by Alembic.
revision: str = '7bcadc170690'
down_revision: Union[str, Sequence[str], None] = '6b3d6d4a1e98'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE EXTENSION IF NOT EXISTS vector;')
    op.create_table('artists',
    sa.Column('artist_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('spotify_id', sa.String(length=255), nullable=False),
    sa.Column('artist_name', sa.String(length=255), nullable=False),
    sa.Column('entirely_queued', sa.Boolean(), nullable=True),
    sa.Column('similar_queued', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('artist_id'),
    sa.UniqueConstraint('spotify_id')
    )
    op.create_index('idx_artists_name', 'artists', ['artist_name'], unique=False)
    op.create_index('idx_artists_queued_status', 'artists', ['entirely_queued', 'similar_queued'], unique=False)
    op.create_index('idx_artists_spotify_id', 'artists', ['spotify_id'], unique=False)
    op.create_table('funnels',
    sa.Column('funnel_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('funnel_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('funnel_id'),
    sa.UniqueConstraint('funnel_name', name='uq_funnel_name')
    )
    op.create_index('idx_funnel_name', 'funnels', ['funnel_name'], unique=False)
    op.create_table('metrics',
    sa.Column('metric_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['metrics.metric_id'], ),
    sa.PrimaryKeyConstraint('metric_id'),
    sa.UniqueConstraint('name', 'type', name='uq_metric_name_type')
    )
    op.create_index('idx_metrics_name', 'metrics', ['name'], unique=False)
    op.create_index('idx_metrics_parent_id', 'metrics', ['parent_id'], unique=False)
    op.create_index('idx_metrics_type', 'metrics', ['type'], unique=False)
    op.create_table('models',
    sa.Column('model_id', sa.String(length=255), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=True),
    sa.Column('param_schema', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('model_id'),
    sa.UniqueConstraint('model_name', name='uq_model_name')
    )
    op.create_index('idx_models_name', 'models', ['model_name'], unique=False)
    op.create_table('queue_auditus',
    sa.Column('spotify_id', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('spotify_id'),
    sa.UniqueConstraint('spotify_id'),
    sa.UniqueConstraint('spotify_id', name='uq_spotify_id_auditus')
    )
    op.create_index('idx_queue_auditus_created_at', 'queue_auditus', ['created_at'], unique=False)
    op.create_table('queue_jukemir',
    sa.Column('spotify_id', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('spotify_id'),
    sa.UniqueConstraint('spotify_id'),
    sa.UniqueConstraint('spotify_id', name='uq_spotify_id_jukemir')
    )
    op.create_index('idx_queue_jukemir_created_at', 'queue_jukemir', ['created_at'], unique=False)
    op.create_table('songs',
    sa.Column('song_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('spotify_id', sa.String(length=255), nullable=False),
    sa.Column('song_name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('song_id'),
    sa.UniqueConstraint('spotify_id')
    )
    op.create_index('idx_songs_created_at', 'songs', ['created_at'], unique=False)
    op.create_index('idx_songs_name', 'songs', ['song_name'], unique=False)
    op.create_index('idx_songs_spotify_id', 'songs', ['spotify_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('spotify_id', sa.String(length=128), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('spotify_id')
    )
    op.create_index('idx_users_spotify_id', 'users', ['spotify_id'], unique=False)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_table('artist_metadata',
    sa.Column('metadata_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('tag', 'genre', name='metadatatype'), nullable=True),
    sa.Column('value', sa.String(length=255), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.artist_id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['artist_metadata.metadata_id'], ),
    sa.PrimaryKeyConstraint('metadata_id'),
    sa.UniqueConstraint('artist_id', 'type', 'value', 'source', name='uq_artist_metadata')
    )
    op.create_index('idx_artist_metadata_artist_id', 'artist_metadata', ['artist_id'], unique=False)
    op.create_index('idx_artist_metadata_parent_id', 'artist_metadata', ['parent_id'], unique=False)
    op.create_index('idx_artist_metadata_source', 'artist_metadata', ['source'], unique=False)
    op.create_index('idx_artist_metadata_type', 'artist_metadata', ['type'], unique=False)
    op.create_index('idx_artist_metadata_value', 'artist_metadata', ['value'], unique=False)
    op.create_table('embeddings_auditus',
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('chunk_id', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=768), nullable=False),
    sa.CheckConstraint('chunk_id >= 0', name='chk_auditus_chunk_id_positive'),
    sa.ForeignKeyConstraint(['song_id'], ['songs.song_id'], ),
    sa.PrimaryKeyConstraint('song_id', 'chunk_id')
    )
    op.create_index('idx_embeddings_auditus_chunk_id', 'embeddings_auditus', ['chunk_id'], unique=False)
    op.create_index('idx_embeddings_auditus_song_id', 'embeddings_auditus', ['song_id'], unique=False)
    op.create_table('embeddings_auditus_pca_250',
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('chunk_id', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=250), nullable=False),
    sa.CheckConstraint('chunk_id >= 0', name='chk_auditus_pca_chunk_id_positive'),
    sa.ForeignKeyConstraint(['song_id'], ['songs.song_id'], ),
    sa.PrimaryKeyConstraint('song_id', 'chunk_id')
    )
    op.create_index('idx_embeddings_auditus_pca_chunk_id', 'embeddings_auditus_pca_250', ['chunk_id'], unique=False)
    op.create_index('idx_embeddings_auditus_pca_song_id', 'embeddings_auditus_pca_250', ['song_id'], unique=False)
    op.create_table('embeddings_jukemir',
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('chunk_id', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=4800), nullable=False),
    sa.CheckConstraint('chunk_id >= 0', name='chk_jukemir_chunk_id_positive'),
    sa.ForeignKeyConstraint(['song_id'], ['songs.song_id'], ),
    sa.PrimaryKeyConstraint('song_id', 'chunk_id')
    )
    op.create_index('idx_embeddings_jukemir_chunk_id', 'embeddings_jukemir', ['chunk_id'], unique=False)
    op.create_index('idx_embeddings_jukemir_song_id', 'embeddings_jukemir', ['song_id'], unique=False)
    op.create_table('embeddings_jukemir_pca_250',
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('chunk_id', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=250), nullable=False),
    sa.CheckConstraint('chunk_id >= 0', name='chk_jukemir_pca_chunk_id_positive'),
    sa.ForeignKeyConstraint(['song_id'], ['songs.song_id'], ),
    sa.PrimaryKeyConstraint('song_id', 'chunk_id')
    )
    op.create_index('idx_embeddings_jukemir_pca_chunk_id', 'embeddings_jukemir_pca_250', ['chunk_id'], unique=False)
    op.create_index('idx_embeddings_jukemir_pca_song_id', 'embeddings_jukemir_pca_250', ['song_id'], unique=False)
    op.create_table('funnel_models',
    sa.Column('funnel_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.String(length=255), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.CheckConstraint('position >= 0', name='chk_funnel_model_position_positive'),
    sa.ForeignKeyConstraint(['funnel_id'], ['funnels.funnel_id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('funnel_id', 'model_id'),
    sa.UniqueConstraint('funnel_id', 'position', name='uq_funnel_position')
    )
    op.create_index('idx_funnel_model_funnel_id', 'funnel_models', ['funnel_id'], unique=False)
    op.create_index('idx_funnel_model_model_id', 'funnel_models', ['model_id'], unique=False)
    op.create_index('idx_funnel_model_position', 'funnel_models', ['position'], unique=False)
    op.create_table('hyperparameters',
    sa.Column('model_id', sa.String(length=255), nullable=False),
    sa.Column('hp_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('f32', 'bool', name='hyperparametertype'), nullable=False),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.CheckConstraint('min IS NULL OR max IS NULL OR min <= max', name='chk_hyperparameter_min_max'),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('model_id', 'hp_id')
    )
    op.create_index('idx_hyperparameters_model_id', 'hyperparameters', ['model_id'], unique=False)
    op.create_index('idx_hyperparameters_type', 'hyperparameters', ['type'], unique=False)
    op.create_table('listens',
    sa.Column('listen_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('listened_at', sa.DateTime(), nullable=True),
    sa.Column('ms_played', sa.Integer(), nullable=False),
    sa.Column('reason_start', sa.Enum('selected', 'skipped', 'trackdone', 'restarted', 'unknown', name='startendreason'), nullable=False),
    sa.Column('reason_end', sa.Enum('selected', 'skipped', 'trackdone', 'restarted', 'unknown', name='startendreason'), nullable=False),
    sa.Column('from_history', sa.Boolean(), nullable=True),
    sa.CheckConstraint('ms_played >= 0', name='chk_listens_ms_played_positive'),
    sa.ForeignKeyConstraint(['song_id'], ['songs.song_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('listen_id'),
    sa.UniqueConstraint('user_id', 'song_id', 'listened_at', name='uq_listen')
    )
    op.create_index('idx_listens_from_history', 'listens', ['from_history'], unique=False)
    op.create_index('idx_listens_listened_at', 'listens', ['listened_at'], unique=False)
    op.create_index('idx_listens_reason_end', 'listens', ['reason_end'], unique=False)
    op.create_index('idx_listens_reason_start', 'listens', ['reason_start'], unique=False)
    op.create_index('idx_listens_song_id', 'listens', ['song_id'], unique=False)
    op.create_index('idx_listens_user_id', 'listens', ['user_id'], unique=False)
    op.create_index('idx_listens_user_listened_at', 'listens', ['user_id', 'listened_at'], unique=False)
    op.create_table('model_metric',
    sa.Column('model_id', sa.String(length=255), nullable=False),
    sa.Column('metric_id', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['metric_id'], ['metrics.metric_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('model_id', 'metric_id')
    )
    op.create_index('idx_model_metric_metric_id', 'model_metric', ['metric_id'], unique=False)
    op.create_index('idx_model_metric_model_id', 'model_metric', ['model_id'], unique=False)
    op.create_table('song_artist',
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.artist_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['song_id'], ['songs.song_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('song_id', 'artist_id')
    )
    op.create_index('idx_song_artist_artist_id', 'song_artist', ['artist_id'], unique=False)
    op.create_index('idx_song_artist_song_id', 'song_artist', ['song_id'], unique=False)
    op.create_table('song_metadata',
    sa.Column('metadata_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('tag', 'genre', name='metadatatype'), nullable=True),
    sa.Column('value', sa.String(length=255), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['song_metadata.metadata_id'], ),
    sa.ForeignKeyConstraint(['song_id'], ['songs.song_id'], ),
    sa.PrimaryKeyConstraint('metadata_id'),
    sa.UniqueConstraint('song_id', 'type', 'value', 'source', name='uq_song_metadata')
    )
    op.create_index('idx_song_metadata_parent_id', 'song_metadata', ['parent_id'], unique=False)
    op.create_index('idx_song_metadata_song_id', 'song_metadata', ['song_id'], unique=False)
    op.create_index('idx_song_metadata_source', 'song_metadata', ['source'], unique=False)
    op.create_index('idx_song_metadata_type', 'song_metadata', ['type'], unique=False)
    op.create_index('idx_song_metadata_value', 'song_metadata', ['value'], unique=False)
    op.create_table('suggested',
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('suggested_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['song_id'], ['songs.song_id'], ),
    sa.ForeignKeyConstraint(['suggested_by'], ['funnels.funnel_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('song_id', 'user_id')
    )
    op.create_index('idx_suggested_by', 'suggested', ['suggested_by'], unique=False)
    op.create_index('idx_suggested_song_id', 'suggested', ['song_id'], unique=False)
    op.create_index('idx_suggested_user_id', 'suggested', ['user_id'], unique=False)
    op.create_table('trajectories',
    sa.Column('trajectory_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.String(length=255), nullable=True),
    sa.Column('started', sa.DateTime(), nullable=False),
    sa.Column('ended', sa.DateTime(), nullable=True),
    sa.Column('timesteps', sa.Integer(), nullable=False),
    sa.Column('on_history', sa.Boolean(), nullable=False),
    sa.CheckConstraint('ended IS NULL OR ended >= started', name='chk_trajectory_end_after_start'),
    sa.CheckConstraint('timesteps > 0', name='chk_trajectory_timesteps_positive'),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('trajectory_id')
    )
    op.create_index('idx_trajectory_ended', 'trajectories', ['ended'], unique=False)
    op.create_index('idx_trajectory_model_id', 'trajectories', ['model_id'], unique=False)
    op.create_index('idx_trajectory_model_started', 'trajectories', ['model_id', 'started'], unique=False)
    op.create_index('idx_trajectory_on_history', 'trajectories', ['on_history'], unique=False)
    op.create_index('idx_trajectory_started', 'trajectories', ['started'], unique=False)
    op.create_table('hp_instances',
    sa.Column('model_id', sa.String(length=255), nullable=False),
    sa.Column('trajectory_id', sa.Integer(), nullable=False),
    sa.Column('hp_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('f32', 'bool', name='hyperparametertype'), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['model_id', 'hp_id'], ['hyperparameters.model_id', 'hyperparameters.hp_id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.ForeignKeyConstraint(['trajectory_id'], ['trajectories.trajectory_id'], ),
    sa.PrimaryKeyConstraint('model_id', 'trajectory_id', 'hp_id')
    )
    op.create_index('idx_hp_instances_model_id', 'hp_instances', ['model_id'], unique=False)
    op.create_index('idx_hp_instances_trajectory_id', 'hp_instances', ['trajectory_id'], unique=False)
    op.create_index('idx_hp_instances_type', 'hp_instances', ['type'], unique=False)
    op.create_index('idx_hp_instances_value', 'hp_instances', ['value'], unique=False)
    op.create_table('listen_chunks',
    sa.Column('chunk_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('listen_id', sa.Integer(), nullable=False),
    sa.Column('from_ms', sa.Integer(), nullable=False),
    sa.Column('to_ms', sa.Integer(), nullable=False),
    sa.CheckConstraint('from_ms >= 0', name='chk_chunks_from_ms_positive'),
    sa.CheckConstraint('to_ms > from_ms', name='chk_chunks_to_greater_than_from'),
    sa.CheckConstraint('to_ms >= 0', name='chk_chunks_to_ms_positive'),
    sa.ForeignKeyConstraint(['listen_id'], ['listens.listen_id'], ),
    sa.PrimaryKeyConstraint('chunk_id'),
    sa.UniqueConstraint('listen_id', 'from_ms', 'to_ms', name='uq_listen_chunk_range')
    )
    op.create_index('idx_listen_chunks_listen_id', 'listen_chunks', ['listen_id'], unique=False)
    op.create_index('idx_listen_chunks_time_range', 'listen_chunks', ['from_ms', 'to_ms'], unique=False)
    op.create_table('param_instances',
    sa.Column('model_id', sa.String(length=255), nullable=False),
    sa.Column('trajectory_id', sa.Integer(), nullable=False),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.ForeignKeyConstraint(['trajectory_id'], ['trajectories.trajectory_id'], ),
    sa.PrimaryKeyConstraint('model_id', 'trajectory_id')
    )
    op.create_index('idx_param_instances_model_id', 'param_instances', ['model_id'], unique=False)
    op.create_index('idx_param_instances_trajectory_id', 'param_instances', ['trajectory_id'], unique=False)
    op.create_table('performances',
    sa.Column('metric_id', sa.String(length=255), nullable=False),
    sa.Column('trajectory_id', sa.Integer(), nullable=False),
    sa.Column('timestep', sa.Integer(), nullable=False),
    sa.Column('song', sa.String(length=255), nullable=True),
    sa.Column('value', sa.Float(), nullable=False),
    sa.CheckConstraint('timestep >= 0', name='chk_performance_timestep_positive'),
    sa.ForeignKeyConstraint(['metric_id'], ['metrics.metric_id'], ),
    sa.ForeignKeyConstraint(['trajectory_id'], ['trajectories.trajectory_id'], ),
    sa.PrimaryKeyConstraint('metric_id', 'trajectory_id', 'timestep')
    )
    op.create_index('idx_model_performance_metric_id', 'performances', ['metric_id'], unique=False)
    op.create_index('idx_model_performance_song', 'performances', ['song'], unique=False)
    op.create_index('idx_model_performance_timestep', 'performances', ['timestep'], unique=False)
    op.create_index('idx_model_performance_trajectory_id', 'performances', ['trajectory_id'], unique=False)
    op.create_index('idx_model_performance_trajectory_timestep', 'performances', ['trajectory_id', 'timestep'], unique=False)
    op.create_index('idx_model_performance_value', 'performances', ['value'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_model_performance_value', table_name='performances')
    op.drop_index('idx_model_performance_trajectory_timestep', table_name='performances')
    op.drop_index('idx_model_performance_trajectory_id', table_name='performances')
    op.drop_index('idx_model_performance_timestep', table_name='performances')
    op.drop_index('idx_model_performance_song', table_name='performances')
    op.drop_index('idx_model_performance_metric_id', table_name='performances')
    op.drop_table('performances')
    op.drop_index('idx_param_instances_trajectory_id', table_name='param_instances')
    op.drop_index('idx_param_instances_model_id', table_name='param_instances')
    op.drop_table('param_instances')
    op.drop_index('idx_listen_chunks_time_range', table_name='listen_chunks')
    op.drop_index('idx_listen_chunks_listen_id', table_name='listen_chunks')
    op.drop_table('listen_chunks')
    op.drop_index('idx_hp_instances_value', table_name='hp_instances')
    op.drop_index('idx_hp_instances_type', table_name='hp_instances')
    op.drop_index('idx_hp_instances_trajectory_id', table_name='hp_instances')
    op.drop_index('idx_hp_instances_model_id', table_name='hp_instances')
    op.drop_table('hp_instances')
    op.drop_index('idx_trajectory_started', table_name='trajectories')
    op.drop_index('idx_trajectory_on_history', table_name='trajectories')
    op.drop_index('idx_trajectory_model_started', table_name='trajectories')
    op.drop_index('idx_trajectory_model_id', table_name='trajectories')
    op.drop_index('idx_trajectory_ended', table_name='trajectories')
    op.drop_table('trajectories')
    op.drop_index('idx_suggested_user_id', table_name='suggested')
    op.drop_index('idx_suggested_song_id', table_name='suggested')
    op.drop_index('idx_suggested_by', table_name='suggested')
    op.drop_table('suggested')
    op.drop_index('idx_song_metadata_value', table_name='song_metadata')
    op.drop_index('idx_song_metadata_type', table_name='song_metadata')
    op.drop_index('idx_song_metadata_source', table_name='song_metadata')
    op.drop_index('idx_song_metadata_song_id', table_name='song_metadata')
    op.drop_index('idx_song_metadata_parent_id', table_name='song_metadata')
    op.drop_table('song_metadata')
    op.drop_index('idx_song_artist_song_id', table_name='song_artist')
    op.drop_index('idx_song_artist_artist_id', table_name='song_artist')
    op.drop_table('song_artist')
    op.drop_index('idx_model_metric_model_id', table_name='model_metric')
    op.drop_index('idx_model_metric_metric_id', table_name='model_metric')
    op.drop_table('model_metric')
    op.drop_index('idx_listens_user_listened_at', table_name='listens')
    op.drop_index('idx_listens_user_id', table_name='listens')
    op.drop_index('idx_listens_song_id', table_name='listens')
    op.drop_index('idx_listens_reason_start', table_name='listens')
    op.drop_index('idx_listens_reason_end', table_name='listens')
    op.drop_index('idx_listens_listened_at', table_name='listens')
    op.drop_index('idx_listens_from_history', table_name='listens')
    op.drop_table('listens')
    op.drop_index('idx_hyperparameters_type', table_name='hyperparameters')
    op.drop_index('idx_hyperparameters_model_id', table_name='hyperparameters')
    op.drop_table('hyperparameters')
    op.drop_index('idx_funnel_model_position', table_name='funnel_models')
    op.drop_index('idx_funnel_model_model_id', table_name='funnel_models')
    op.drop_index('idx_funnel_model_funnel_id', table_name='funnel_models')
    op.drop_table('funnel_models')
    op.drop_index('idx_embeddings_jukemir_pca_song_id', table_name='embeddings_jukemir_pca_250')
    op.drop_index('idx_embeddings_jukemir_pca_chunk_id', table_name='embeddings_jukemir_pca_250')
    op.drop_table('embeddings_jukemir_pca_250')
    op.drop_index('idx_embeddings_jukemir_song_id', table_name='embeddings_jukemir')
    op.drop_index('idx_embeddings_jukemir_chunk_id', table_name='embeddings_jukemir')
    op.drop_table('embeddings_jukemir')
    op.drop_index('idx_embeddings_auditus_pca_song_id', table_name='embeddings_auditus_pca_250')
    op.drop_index('idx_embeddings_auditus_pca_chunk_id', table_name='embeddings_auditus_pca_250')
    op.drop_table('embeddings_auditus_pca_250')
    op.drop_index('idx_embeddings_auditus_song_id', table_name='embeddings_auditus')
    op.drop_index('idx_embeddings_auditus_chunk_id', table_name='embeddings_auditus')
    op.drop_table('embeddings_auditus')
    op.drop_index('idx_artist_metadata_value', table_name='artist_metadata')
    op.drop_index('idx_artist_metadata_type', table_name='artist_metadata')
    op.drop_index('idx_artist_metadata_source', table_name='artist_metadata')
    op.drop_index('idx_artist_metadata_parent_id', table_name='artist_metadata')
    op.drop_index('idx_artist_metadata_artist_id', table_name='artist_metadata')
    op.drop_table('artist_metadata')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_index('idx_users_spotify_id', table_name='users')
    op.drop_table('users')
    op.drop_index('idx_songs_spotify_id', table_name='songs')
    op.drop_index('idx_songs_name', table_name='songs')
    op.drop_index('idx_songs_created_at', table_name='songs')
    op.drop_table('songs')
    op.drop_index('idx_queue_jukemir_created_at', table_name='queue_jukemir')
    op.drop_table('queue_jukemir')
    op.drop_index('idx_queue_auditus_created_at', table_name='queue_auditus')
    op.drop_table('queue_auditus')
    op.drop_index('idx_models_name', table_name='models')
    op.drop_table('models')
    op.drop_index('idx_metrics_type', table_name='metrics')
    op.drop_index('idx_metrics_parent_id', table_name='metrics')
    op.drop_index('idx_metrics_name', table_name='metrics')
    op.drop_table('metrics')
    op.drop_index('idx_funnel_name', table_name='funnels')
    op.drop_table('funnels')
    op.drop_index('idx_artists_spotify_id', table_name='artists')
    op.drop_index('idx_artists_queued_status', table_name='artists')
    op.drop_index('idx_artists_name', table_name='artists')
    op.drop_table('artists')
    # ### end Alembic commands ###
